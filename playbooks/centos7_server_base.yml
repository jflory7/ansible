---
- hosts: centos7
  become: yes

  vars:
    git_conf_dir: /home/jflory/git/conf
    target_user: jflory
    user_home_dir: /home/jflory

  tasks:
    - name: add EPEL and IUS repositories
      package:
        state: present
        name:
          - epel-release
          - https://centos7.iuscommunity.org/ius-release.rpm

    - name: install base packages
      package:
        state: latest
        name:
          - https://repos.influxdata.com/centos/7Server/x86_64/stable/telegraf-1.8.0-1.x86_64.rpm
          - ansible
          - duply
          - fail2ban
          - fail2ban-firewalld
          - git
          - golang
          - htop
          - jq
          - nginx
          - ntp
          - python-flake8
          - python36u
          - python36u-pip
          - smartmontools
          - strace
          - task
          - tmux
          - vim
          - which
          - yum-cron

    - name: remove unused system packages
      package:
        state: absent
        name:
          - logwatch
          - mosh
          - powerline
          - powerline-fonts
          - python34
          - python34-libs
          - python34-pip
          - python34-setuptools
          - tmux-powerline

    - name: start and enable firewalld
      service:
        name: firewalld
        state: started
        enabled: yes
      ignore_errors: yes

    - name: start and enable ntpd
      service:
        name: ntpd
        state: started
        enabled: yes

    - name: add new user - jflory
      user:
        name: jflory
        comment: Justin W. Flory
        groups: wheel
        append: yes

    - name: configure dotfiles
      become_user: "{{ target_user }}"
      git: repo=https://github.com/jwflory/conf.git dest={{ git_conf_dir }}

    - name: populate config directories
      become_user: "{{ target_user }}"
      file: path={{ user_home_dir }}/{{ item }} state=directory
      with_items:
        - .ansible/tmp
        - .bash_completion.d
        - .config/bugwarrior
        - .ssh
        - .vim/autoload
        - .vim/bundle
        - wkspc

    - name: configure bash
      become_user: "{{ target_user }}"
      file: force=yes src={{ git_conf_dir }}/bash/{{ item }} dest={{ user_home_dir }}/.{{ item }} state=link
      with_items:
        - bashrc
        - bash_profile

    - name: configure bash auto-completion scripts
      become_user: "{{ target_user }}"
      file: force=yes src={{ git_conf_dir }}/taskwarrior/{{ item }} dest={{ user_home_dir }}/.bash_completion.d/{{ item }} state=link
      with_items:
        - task.sh

    - name: configure bugwarrior
      become_user: "{{ target_user }}"
      file: force=yes src={{ git_conf_dir }}/bugwarrior/bugwarriorrc dest={{ user_home_dir }}/.config/bugwarrior/bugwarriorrc state=link

    - name: configure git
      become_user: "{{ target_user }}"
      file: force=yes src={{ git_conf_dir }}/git/{{ item }} dest={{ user_home_dir }}/.{{ item }} state=link
      with_items:
        - gitconfig
        - gitconfig-jump
        - gitconfig-unicef
 
    - name: configure ssh
      become_user: "{{ target_user }}"
      file: force=yes src={{ git_conf_dir }}/ssh/config dest={{ user_home_dir }}/.ssh/config state=link
 
    - name: configure task
      become_user: "{{ target_user }}"
      file: force=yes src={{ git_conf_dir }}/taskwarrior/taskrc.rhel dest={{ user_home_dir }}/.taskrc state=link
 
    - name: configure tmux
      become_user: "{{ target_user }}"
      file: force=yes src={{ git_conf_dir }}/tmux/tmux.conf dest={{ user_home_dir }}/.tmux.conf state=link
 
    - name: configure vim
      become_user: "{{ target_user }}"
      file: force=yes src={{ git_conf_dir }}/vim/vimrc dest={{ user_home_dir }}/.vimrc state=link
 
    - name: configure vim - pathogen
      become_user: "{{ target_user }}"
      get_url: url=https://tpo.pe/pathogen.vim dest={{ user_home_dir }}/.vim/autoload/pathogen.vim mode=0750
 
    - name: add vim plugin - code_complete
      become_user: "{{ target_user }}"
      git: repo=https://github.com/mbbill/code_complete.git dest={{ user_home_dir }}/.vim/bundle/vim-code-complete
 
    - name: add vim plugin - Dockerfile.vim
      become_user: "{{ target_user }}"
      git: repo=https://github.com/ekalinin/Dockerfile.vim.git dest={{ user_home_dir }}/.vim/bundle/vim-dockerfile
 
    - name: add vim plugin - syntastic
      become_user: "{{ target_user }}"
      git: repo=https://github.com/vim-syntastic/syntastic.git dest={{ user_home_dir }}/.vim/bundle/vim-syntastic
 
    - name: add vim plugin - vim-airline
      become_user: "{{ target_user }}"
      git: repo=https://github.com/vim-airline/vim-airline.git dest={{ user_home_dir }}/.vim/bundle/vim-airline
 
    - name: add vim plugin - vim-closetag
      become_user: "{{ target_user }}"
      git: repo=https://github.com/alvan/vim-closetag.git dest={{ user_home_dir }}/.vim/bundle/vim-closetag
 
    - name: add vim plugin - vim-flake8
      become_user: "{{ target_user }}"
      git: repo=https://github.com/nvie/vim-flake8.git dest={{ user_home_dir }}/.vim/bundle/vim-flake8
 
    - name: add vim plugin - vim-jinja
      become_user: "{{ target_user }}"
      git: repo=https://github.com/mitsuhiko/vim-jinja.git dest={{ user_home_dir }}/.vim/bundle/vim-jinja
 
    - name: add vim plugin - vim-snippets
      become_user: "{{ target_user }}"
      git: repo=https://github.com/honza/vim-snippets.git dest={{ user_home_dir }}/.vim/bundle/vim-snippets
 
    - name: add vim plugin - vim-surround
      become_user: "{{ target_user }}"
      git: repo=https://github.com/tpope/vim-surround.git dest={{ user_home_dir }}/.vim/bundle/vim-surround
 
    - name: remove unused system Python packages
      pip:
        executable: pip3.6
        state: absent
        name:
          - powerline-status

    - name: remove unused user Python packages
      become_user: "{{ target_user }}"
      pip:
        executable: pip3.6
        state: absent
        name:
          - powerline-status

      # COOL EXAMPLE: Must use shell module over command module since GOPATH is
      # found in user's bash_profile. This is used for a custom path for Go
      # package binaries.
    - name: install golang package - powerline-go
      become_user: "{{ target_user }}"
      shell: go get -u github.com/justjanne/powerline-go creates={{ user_home_dir }}/wkspc/go/bin/powerline-go

    - name: (hack) move powerline-go to correct path
      become_user: "{{ target_user }}"
      command: mv {{ user_home_dir }}/go {{ user_home_dir }}/wkspc/go
      args:
        creates: "{{ user_home_dir }}/wkspc/go"
        removes:  "{{ user_home_dir }}/go"

    - name: (hack) create powerline-go system-level symbolic link
      file: src={{ user_home_dir }}/wkspc/go/bin/powerline-go dest=/usr/bin/powerline-go state=link
