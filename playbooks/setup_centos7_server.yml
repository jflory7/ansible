---
- hosts: all
  become: yes
  become_user: root
  vars:
    git_conf_dir: /home/jflory/git/conf
    target_user: jflory
    user_home_dir: /home/jflory
  tasks:
    - name: add EPEL and IUS repositories
      package:
        name:
          - epel-release
          - https://centos7.iuscommunity.org/ius-release.rpm
        state: present
    - name: remove unused packages
      package: name={{ item }} state=absent
      with_items:
        - logwatch
        - mosh
        - python34
        - python34-libs
        - python34-pip
        - python34-setuptools
    - name: install base packages
      package: name={{ item }} state=latest
      with_items:
        - https://repos.influxdata.com/centos/7Server/x86_64/stable/telegraf-1.8.0-1.x86_64.rpm
        - ansible
        - duply
        - fail2ban
        - fail2ban-firewalld
        - git
        - htop
        - jq
        - nginx
        - ntp
        - python-flake8
        - python36u
        - python36u-pip
        - smartmontools
        - strace
        - task
        - tmux
        - vim
        - which
        - yum-cron
    - name: start and enable NTP
      service:
        name: ntpd
        state: started
        enabled: yes
    - name: add new user - jflory
      user:
        name: jflory
        comment: Justin W. Flory
        groups: wheel
        append: yes
    - name: configure dotfiles
      git: repo=https://github.com/jwflory/conf.git dest={{ git_conf_dir }}
    - name: populate config directories
      file: path={{ user_home_dir }}/{{ item }} state=directory
      with_items:
        - .bash_completion.d
        - .config/bugwarrior
        - .config/powerline
        - .ssh
        - .vim/autoload
        - .vim/bundle
        - wkspc
    - name: configure bash
      file: force=yes src={{ git_conf_dir }}/bash/{{ item }} dest={{ user_home_dir }}/.{{ item }} state=link
      with_items:
        - bashrc
        - bash_profile
    - name: configure bash auto-completion scripts
      file: force=yes src={{ git_conf_dir }}/taskwarrior/{{ item }} dest={{ user_home_dir }}/.bash_completion.d/{{ item }} state=link
      with_items:
        - task.sh
    - name: configure bugwarrior
      file: force=yes src={{ git_conf_dir }}/bugwarrior/bugwarriorrc dest={{ user_home_dir }}/.config/bugwarrior/bugwarriorrc state=link
    - name: configure git
      file: force=yes src={{ git_conf_dir }}/git/{{ item }} dest={{ user_home_dir }}/.{{ item }} state=link
      with_items:
        - gitconfig
        - gitconfig-jump
        - gitconfig-unicef
    - name: configure powerline - create system directory
      file:
        path: /usr/share/powerline/bash
        state: directory
    - name: configure powerline - link Bash script bindings
      file:
        force: yes
        src: /usr/lib/python3.6/site-packages/powerline/bindings/bash/powerline.sh
        dest: /usr/share/powerline/bash/powerline.sh
        state: link
    - name: configure powerline - user config files
      file: force=yes src={{ git_conf_dir }}/powerline/config.json dest={{ user_home_dir }}/.config/powerline/config.json state=link
    - name: configure ssh
      file: force=yes src={{ git_conf_dir }}/ssh/config dest={{ user_home_dir }}/.ssh/config state=link
    - name: configure task
      file: force=yes src={{ git_conf_dir }}/taskwarrior/taskrc.fedora dest={{ user_home_dir }}/.taskrc state=link
    - name: configure tmux
      file: force=yes src={{ git_conf_dir }}/tmux/tmux.conf dest={{ user_home_dir }}/.tmux.conf state=link
    - name: configure vim
      file: force=yes src={{ git_conf_dir }}/vim/vimrc dest={{ user_home_dir }}/.vimrc state=link
    - name: configure vim - pathogen
      get_url: url=https://tpo.pe/pathogen.vim dest={{ user_home_dir }}/.vim/autoload/pathogen.vim mode=0750
    - name: add vim plugin - code_complete
      git: repo=https://github.com/mbbill/code_complete.git dest={{ user_home_dir }}/.vim/bundle/vim-code-complete
    - name: add vim plugin - Dockerfile.vim
      git: repo=https://github.com/ekalinin/Dockerfile.vim.git dest={{ user_home_dir }}/.vim/bundle/vim-dockerfile
    - name: add vim plugin - syntastic
      git: repo=https://github.com/vim-syntastic/syntastic.git dest={{ user_home_dir }}/.vim/bundle/vim-syntastic
    - name: add vim plugin - vim-airline
      git: repo=https://github.com/vim-airline/vim-airline.git dest={{ user_home_dir }}/.vim/bundle/vim-airline
    - name: add vim plugin - vim-closetag
      git: repo=https://github.com/alvan/vim-closetag.git dest={{ user_home_dir }}/.vim/bundle/vim-closetag
    - name: add vim plugin - vim-flake8
      git: repo=https://github.com/nvie/vim-flake8.git dest={{ user_home_dir }}/.vim/bundle/vim-flake8
    - name: add vim plugin - vim-jinja
      git: repo=https://github.com/mitsuhiko/vim-jinja.git dest={{ user_home_dir }}/.vim/bundle/vim-jinja
    - name: add vim plugin - vim-snippets
      git: repo=https://github.com/honza/vim-snippets.git dest={{ user_home_dir }}/.vim/bundle/vim-snippets
    - name: add vim plugin - vim-surround
      git: repo=https://github.com/tpope/vim-surround.git dest={{ user_home_dir }}/.vim/bundle/vim-surround
    - name: set correct owner/group on target user home directory
      file: dest=/home/{{ target_user }} owner={{ target_user }} group={{ target_user }} recurse=yes
    - name: firewalld - whitelist services
      firewalld: service={{ item }} immediate=yes permanent=true state=enabled
      with_items:
        - http
        - https
    - name: firewalld - open Telegraf port
      firewalld:
        port: 8086/tcp
        immediate: yes
        permanent: true
        state: enabled
